**DOCKER COMMANDS**

$ docker build -t name:tag {path}
	-> create the docker image
$ docker build -d (detach) -p (port) host-port:container-port --name {container-name} name:tag {image}
	-> create the container thanks to the docker image
$ docker start {id}
	-> stop a container
$ docker stop {id}
	-> start a container
$ docker logs {id}
	-> shows the logs of a specific container
$ docker images
	-> shows all docker images
$ docker ps
	-> show the running container ({-a} -> shows even the exited one)

$ docker container rm -f $(docker container ls -aq)
	--> remove all container

$ docker image rm -f $(docker image ls -q)
	-> remove all the docker images

**NGINX**
[ "https://ubuntu.com/tutorials/install-and-configure-nginx#1-overview" ]
Configuartion file of NGINX (open source software of web server)

@root is the directory where the .html file is placed
@index is used to specify file available when visiting root directory of site.server_name

See documentation about configuration file
[ "https://docs.nginx.com/nginx/admin-guide/basic-functionality/managing-configuration-files/" ]

**TLS**
[ "https://www.cyberciti.biz/faq/configure-nginx-to-use-only-tls-1-2-and-1-3/" ]
Transport Layer Security (TLS) is a cryptographic protocol designed to provide communications security over a computer network.

**DOCKER-COMPOSE**
yml files are data files like json files
docker-compose.yml -> docker-compose up

==========================================
version: "3.8"
services:
	web:
		build: ./path/to/Dockerfile
		ports:
			- 3000:3000
	api:
		build: ./path/to/Dockerfile
		ports:
			- 3000:3000
		environment:
			KEY value
	db:
		image: mongo:4.0-xenial
		ports:
			- 27017:27017
		volumes:
			- vidly:path/to/data
	whatever_name:

volumes:
	vidly:

==========================================
	wordpress:
		build: ./wordpress
		ports:
			- 3000:3000
		environment:
			KEY value

	mariadb:
		build: ./mariadb
		ports:
			- 27017:27017
		volumes:
			- vidly:path/to/data

volumes:
	vidly:
==========================================

build: path to the dockerfile to build the image
image: pull the image from internet
ports: set the listening port (binding)
volumes:

docker-compose up --build (rebuild the docker-compose) -d (detach)
	-> build and run the docker-compose
docker-compose ps
	-> list all the running docker-compose
docker-compose down
	-> stop the docker-compose

docker network ls
	-> list all the docker network

docker exec -it (interactive mode) -u root (connect as root user) {Container ID} sh
	-> run the container in interctive mode

**Create the TLS certificate**
openssl req - PKCS#10 certificate request and certificate generating command
	-x509 This option outputs a certificate instead of a certificate request. This is typically used to generate test certificates
	-out {filename} This specifies the output filename to write to or standard output by default
	-keyout {filename} This gives the filename to write any private key to that has been newly created or read from -key
	-subj {ARG} Sets subject name for new request or supersedes the subject name when processing a certificate request.
	Questions: -> Country name / State name / Locality name / Organization Name / Organizational Unit Name / Common Name / Email address

["https://docs.docker.com/compose/compose-file/compose-file-v3/"]

cat << EOF
Y
n
n
EOF